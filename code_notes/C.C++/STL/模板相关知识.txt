template type parameter（模板类型参数）
1.函数模板
template <typename identifier> function_declaration和template <class identifier> function_declaration几乎一样
但有一个特例，就是当T是一个类，而这个类又有子类(假设名为innerClass)时，应该用template<typename>:

typename T::innerClass   myInnerObject;

这里的typename告诉编译器，T::innerClass是一个类，程序要声明一个T::innerClass类的对象，而不是声明T的静态成员，而typename 如果换成 class 则语法错误。

在function_declaration的头文件中使用function_declaration函数，必须包含function_declaration的定义，否则编译会出错，这个和一般的函数使用不一样。所以必须在method.h文件的最后一行加入#include "method.cpp"。

---------------------------------------------------------------------------------------------

2.template<>前缀表示这是一个专门化,描述时不用模板参数，在尖括号里面加类型，确定下来模板的类型称为模板的实例化
模板里面非类型参数可以这样加 template <typename T ，int size>   要求是整数，字面量，编译的时候就需要定下来
模板一样可以有形参默认值

3.类模板，在定义的时候他的每个成员函数也得写成模板格式，及   类名< >   并且在前面加上template <typename T>
另外一种方式是将定义放在类里面，可以省去这些，所以模板一般声明定义不分开，整个放一起，一般在头文件里面（建议这样处理）

4.模板的专门化


5.函数模板   21:00:00

