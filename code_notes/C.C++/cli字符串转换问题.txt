//使用此种方法转换std::string，将中文字符转换成可见字符串
inline std::string ConvertWideCharToUTF8(const std::string& strResourse)
{
	std::string strUTF8;
	int nLenWideCharStr = MultiByteToWideChar(CP_ACP, 0, strResourse.c_str(), -1, NULL, 0);
	PWCHAR pWideCharStr = NULL;
	pWideCharStr =(PWSTR)HeapAlloc(GetProcessHeap(), 0, nLenWideCharStr*sizeof(wchar_t));
	memset(pWideCharStr,0,nLenWideCharStr*sizeof(wchar_t));
	MultiByteToWideChar(CP_ACP, 0, strResourse.c_str(), -1, pWideCharStr, nLenWideCharStr);

	std::wstring wideStr = pWideCharStr;
	int nLenUTF8 = WideCharToMultiByte(CP_UTF8, 0, &wideStr[0], wideStr.size(), 0,0,0,0);
	strUTF8.resize(nLenUTF8);
	WideCharToMultiByte(CP_UTF8, 0, &wideStr[0], wideStr.size(), &strUTF8[0], nLenUTF8, 0, 0);
	return strUTF8;
}

//使用此种方法转换System::String成std::string,不会出现中文乱码问题
inline void ConvertToStdString(System::String^ str,std::string& destStr)
{
	char* p = (char*)(int)System::Runtime::InteropServices::Marshal::StringToHGlobalAnsi(str);
	destStr = p;
	System::Runtime::InteropServices::Marshal::FreeHGlobal((System::IntPtr)p);
}