1.Qt是c++程序
2.QT程序启动QT的环境QApplication


学习QT 
QT类的结构层次
QT的信号signal与槽slot
QT的基本组件
QT的UI设计器

A帮助文档的组成部分：
1.模块 module
2.类的作用简单描述
3.类所在头文件
4.父类(inherits)和派生类(inherited by)
5.构造函数/析构函数
6.共有函数
7.属性(访问成员变量的方法)

3.  #include <QApplication>
int main(int args,char*　argv)
{
	QApplication app(args,argv);
	...
	...
	...
	
	return app.exec();    //等待所有子线程结束
}

4.  *.pro文件
 TEMPLATE=
         :APP   应用程序
		 :lib   库
 SOURCES=
		 :cpp文件1  cpp文件2  cpp文件3       指定源文件
		 :\ 续行符号
		 :SOURCES+=       三种使用方式指明多个文件
 HEADERS=
		 :              指定h头文件，使用方式同源文件使用方式
 CONFIG=                影响gcc的选项
		 :release | debug
		 :warn_on | warn_off
 QT=       
 
 
B乱码处理
    1.QTextCodec * codec::codecForName("gb2312");
	  QTextCodec * codec::setCodecForTr(codec);
	 
	 
	 
	 QLineEdit edit(&str);
	 edit.resize(400,300);
	 edit.move((1366-400)/2,(768-300)/2);
	 edit.setText(QObject::tr("确定"));
	 
	 QcheckBox abs(&str);
	 abs.resize(400,300);
	 abs.move((1366-400)/2,(768-300)/2);
	 abs.setText(QObject::tr("确定"))；

	 
	 
C代码组织 
  以窗体为基本单位的封装
  
  
D  QT界面基本插件
1.Label 标签
2.TextCodec  文本框
3.QPushButton  按钮


E qt的界面设计器
	designer.exe    安装目录bin文件夹
	工具视图：一般属性编辑器里面编辑 （快捷键Ctrl+I）
	组件编辑：方向键微调，Ctrl+方向键   shift+方向键改变大小
	后缀 .ui   实际是xml文本文件

F 信号与槽解决问题：
	对象的成员变量的调用
	对象的成员函数的调用
	
	（事件发生的时候，调用用户的函数，即事件——>信号——>槽）
	
G 使用信号与槽
	最大的好处：不通过参数传递，直接调用对象，以及在对象之间传递数据
	1.头文件与实现文件必须分开，思想主要在头文件中处理
	2.必须继承QObject
	3.被调用函数称为槽slot
	4.调用函数称为信号
	5.必须在类引入QObject宏  Q_OBJECT
	6.实现文件与c++完全一样
	7.信号与槽的返回值必须是void
	8.关联的信号与槽原型必须一致，名字可以不同
	
注意：信号函数不需要实现（也就是说使用signal标记信号函数时，信号函数是一个声明，返回void，不需要函数实现代码）
	SIGNAL()和SLOT()是宏
1.要链接的两个类必须继承于QObject，同时添加 Q_OBJECT
2.connect中填写的signal和slot函数，一定要填写参数类型，但是不可以有参数
3.connect原型  connect(sender,SIGNAL(signal),receiver,SLOT(slot));   
       其中sender和receiver都是QObject类型的
4.使用emit在恰当的位置发出信号
5.槽函数是普通的成员函数，受到private，public，protected的影响

H 事件交互
		槽函数必须与clicked信号原型一致
		槽函数的位置放在访问类成员最多的类里面
		
		
I窗体
	QObject
		QPaintDevice（绘制属性）
		QWidget（几何属性/光标/图标/标题/可见性/透明度）
	所有可视化组件都是继承自QWidget
		窗体
		菜单/工具条/状态条
		组件
		
J编辑器提供三个基类 QMainWindow，QWidget，QDialog
1.QMainWindow类提供一个有菜单条、锚接窗口（例如工具条）和一个状态条的主应用程序窗口。主窗口通常用在提供一个大的中央窗口部件（例如文本编辑或者绘制画布）以及周围菜单、工具条和一个状态条。QMainWindow常常被继承，因为这使得封装中央部件、菜单和工具条以及窗口状态条变得更容易，当用户点击菜单项或者工具条按钮时，槽会被调用。
2.QWidget类是所有用户界面对象的基类。窗口部件是用户界面的一个基本单元：它从窗口系统接收鼠标、键盘和其它事件，并且在屏幕上绘制自己。每一个窗口部件都是矩形的，并且它们按Z轴顺序排列。一个窗口部件可以被它的父窗口部件或者它前面的窗口部件盖住一部分。
3.QDialog类是对话框窗口的基类。对话框窗口是主要用于短期任务以及和用户进行简要通讯的顶级窗口。QDialog可以是模态对话框也可以是非模态对话框。QDialog支持扩展性并且可以提供返回值。它们可以有默认按钮。

QObject三大职责（内存管理、内省(intropection)与事件处理制）

K.Qt中创建上下文菜单的方法有两种：一种是重载contextMenuEvent()函数，另一种是像创建菜单那样新建一个函数并在类的构造函数中调用它 

L.Qt获取组合键
所有QT类的基类QObject有一个成员函数installEventFilter，这个函数是用来将一个事件处理器和该QObject绑定起来。

首先在chat类定义一个eventFilter，该函数是一个虚函数，可以由子类进行更改。所以声明eventFilter如下：

virtual bool eventFilter(QObject *obj, QEvent *e);

大概意思就是如果你要过滤某个事件就返回false，如果要使用某个事件就返回true。

QKeyEvent类有函数key和modifier，key函数返回的是发生时间的按键值，modifier返回的而是修饰键	 