/******************************************************************************
* 文件名: jctime.h
* 描述: 时间处理文件(包括日期和时间的获取,初始化,高精度计时等)
* Copyright(c)2014-2016 JCDZ Co.,Ltd.
*
* 修改记录:
* --------------------
* v1.0   2014/03/14 14:29:0, lys 创建文件
*
******************************************************************************/
#ifndef _JCTIME_H_
#define _JCTIME_H_

#if defined(__linux) || defined(__APPLE__) || defined(__CYGWIN__)
#include <sys/time.h>
#include <string>
#include "jcbase.h"

#include <string>
#include "jcbase.h"

using namespace std;

typedef struct _SYSTEMTIME
{
	WORD wYear;
	WORD wMonth;
	WORD wDayOfWeek;
	WORD wDay;
	WORD wHour;
	WORD wMinute;
	WORD wSecond;
	WORD wMilliseconds;
} 	SYSTEMTIME;

class DLL_EXPORT JCTimeFormat
{
public:
	JCTimeFormat();
	~JCTimeFormat();

    /******************************************************************************
    * 类型名: JCTimeFormat::FormatType
    * 描述: 时间格式类型
    *
    * 输入:
    * 输出:
    * 返回值:
    *
    * 修改记录:
    * --------------------
    *    2014/03/18 14:20:50, lys 创建函数
    *
    ******************************************************************************/
	enum FormatType
	{
		STAMP,         /* %04d-%02d-%02d %02d:%02d:%02d.%03d */
		STANDARD,      /* %04d-%02d-%02d %02d:%02d:%02d */
		SHORT,         /* %04d%02d%02d%02d%02d%02d */
		SHORTDATE,     /* %04d%02d%02d */
		SHORTTIME,     /* %02d%02d%02d */
		LONGDATE,      /* %04d-%02d-%02d */
		LONGTIME,      /* %02d:%02d:%02d */
		FORMATMAX
	};

	/******************************************************************************
	* 函数名:JCTimeFormat.TimeToString
	* 描述: 将SYSTEMTIME时间类型格式化为指定字符串形式
	*
	* 输入: tTime: 时间 eType: 格式化样式类型
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:15:37, lys 创建函数
	*
	******************************************************************************/
	static string TimeToString(SYSTEMTIME tTime, FormatType eType);

	/******************************************************************************
	* 函数名:JCTimeFormat.StringToTime
	* 描述: 指定字符串时间样式转换为SYSTEMTIME, 注: 不完整的时间格式(如 2014-03-08)
	*       将默认获取当前本地时间项对其补齐
	*
	* 输入: strTime时间字符串 eType 与strTime匹配的样式类型
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:17:24, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StringToTime(const string strTime, FormatType eType);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatStamp
	* 描述: 格式化SYSTEMTIME结构转换为2014-03-08 12:34:45.367样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:22:49, lys 创建函数
	*
	******************************************************************************/
	static string FormatStamp(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatStandard
	* 描述: 格式化SYSTEMTIME结构为2014-03-08 12:34:45样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:23:56, lys 创建函数
	*
	******************************************************************************/
	static string FormatStandard(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShort
	* 描述: SYSTEMTIME结构转换为20140308123445样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:25:0, lys 创建函数
	*
	******************************************************************************/
	static string FormatShort(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShortDate
	* 描述: SYSTEMTIME结构转换为 20140308样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:28:26, lys 创建函数
	*
	******************************************************************************/
	static string FormatShortDate(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShortTime
	* 描述: SYSTEMTIME结构转换为 123445样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:15, lys 创建函数
	*
	******************************************************************************/
	static string FormatShortTime(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatLongDate
	* 描述: SYSTEMTIME结构转换为 2014-03-08样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:29:40, lys 创建函数
	*
	******************************************************************************/
	static string FormatLongDate(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatLongTime
	* 描述: SYSTEMTIME结构转换为 12:34:45样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:31:16, lys 创建函数
	*
	******************************************************************************/
	static string FormatLongTime(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.StampToTime
	* 描述:2014-03-08 12:34:45.367样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:23:25, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StampToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.StandardToTime
	* 描述: 2014-03-08 12:34:45样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:24:38, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StandardToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortToTime
	* 描述: 20140308123445样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:27:53, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortDateToTime
	* 描述: 20140308样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:28:49, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortDateToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortTimeToTime
	* 描述: 123445样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:42, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortTimeToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.LongDateToTime
	* 描述: 2014-03-08样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:1, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME LongDateToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.LongTimeToTime
	* 描述: 12:34:45样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:35:5, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME LongTimeToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.GetWeekDay
	* 描述: 计算指定日期为星期几(0 周日 1 周一...)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:20:3, lys 创建函数
	*
	******************************************************************************/
	static int GetWeekDay(int nYear, int nMonth, int nDay);

	/******************************************************************************
	* 函数名:JCTime.GetFmtCurrentLocalTime
	* 描述: 获取格式化的当前本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:47, lys 创建函数
	*
	******************************************************************************/
	string GetFmtCurrentLocalTime();

	static void   GetLocalTime(SYSTEMTIME& time);
	static SYSTEMTIME Time_tToSystemTime(struct tm &tTm);
	static time_t SystemTimeToTime_t(SYSTEMTIME sysTime);

private:
	static string strFormat[FORMATMAX];
	static const int FMT_MAX_LEN;
};

class DLL_EXPORT JCTime
{
public:
	/******************************************************************************
	* 函数名:JCTime.JCTime
	* 描述: 获取当前本地时间作为对象时间,默认输出格式2014-03-08 12:34:45
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:37:10, lys 创建函数
	*
	******************************************************************************/
	JCTime(JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);
	//JCTime(const SYSTEMTIME tSystemTIme, JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);

	/******************************************************************************
	* 函数名:JCTime.GetFmtCurrentSystemTime
	* 描述: 获取格式化的当前UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:28, lys 创建函数
	*
	******************************************************************************/
	string GetFmtCurrentSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetCurrentLocalTime
	* 描述: 获取当前本地时区时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:45:36, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME GetCurrentLocalTime();

	/******************************************************************************
    * 函数名:JCTime.GetSystemTickCount
    * 描述: 获取常规系统Tick计数(一个tick为1ms)
    *
    * 输入:
    * 输出:
    * 返回值:
    *
    * 修改记录:
    * --------------------
    *    2014/03/27 10:11:15, lys 创建函数
    *
    ******************************************************************************/
	unsigned long GetSystemTickCount();

	/******************************************************************************
	* 函数名:JCTime.GetObjectLivingTick
	* 描述: 获取时间对象从构造到当前历经的tick数(单位 ms)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:50:30, lys 创建函数
	*
	******************************************************************************/
	unsigned long GetObjectLivingTick();

	/******************************************************************************
	* 函数名:JCTime.GetObjectLivingHPTick
	* 描述: JCTime.GetObjectLivingTick的高精度版本
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:51:12, lys 创建函数
	*
	******************************************************************************/
	float GetObjectLivingHPTick();

	/******************************************************************************
	* 函数名:JCTime.GetFmtCurrentLocalTime
	* 描述: 获取格式化的当前本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:47, lys 创建函数
	*
	******************************************************************************/
	string GetFmtCurrentLocalTime();

	/******************************************************************************
	* 函数名:JCTime.HPTickElapse
	* 描述: JCTime.TickElapse的高精度版本(单位 ms 精度可达1ms)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:44:9, lys 创建函数
	*
	******************************************************************************/
	float HPTickElapse();/*可达到1ms精度*/

private:
	JCTimeFormat::FormatType m_eFormatType;
	unsigned long m_nBirthTick;
};

#else /*end linux*/

#include <windows.h>
#include <string>
#include "jcbase.h"

using namespace std;

class DLL_EXPORT JCTimeFormat
{
public:
	JCTimeFormat();
	~JCTimeFormat();

    /******************************************************************************
    * 类型名: JCTimeFormat::FormatType
    * 描述: 时间格式类型
    *
    * 输入:
    * 输出:
    * 返回值:
    *
    * 修改记录:
    * --------------------
    *    2014/03/18 14:20:50, lys 创建函数
    *
    ******************************************************************************/
	enum FormatType
	{
		STAMP,         /* %04d-%02d-%02d %02d:%02d:%02d.%03d */
		STANDARD,      /* %04d-%02d-%02d %02d:%02d:%02d */
		SHORT,         /* %04d%02d%02d%02d%02d%02d */
		SHORTDATE,     /* %04d%02d%02d */
		SHORTTIME,     /* %02d%02d%02d */
		LONGDATE,      /* %04d-%02d-%02d */
		LONGTIME,      /* %02d:%02d:%02d */
		FORMATMAX
	};

	/******************************************************************************
	* 函数名:JCTimeFormat.TimeToString
	* 描述: 将SYSTEMTIME时间类型格式化为指定字符串形式
	*
	* 输入: tTime: 时间 eType: 格式化样式类型
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:15:37, lys 创建函数
	*
	******************************************************************************/
	static string TimeToString(SYSTEMTIME tTime, FormatType eType);

	static string Time_tToString(time_t tTime, FormatType eType);

	/******************************************************************************
	* 函数名:JCTimeFormat.StringToTime
	* 描述: 指定字符串时间样式转换为SYSTEMTIME, 注: 不完整的时间格式(如 2014-03-08)
	*       将默认获取当前本地时间项对其补齐
	*
	* 输入: strTime时间字符串 eType 与strTime匹配的样式类型
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:17:24, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StringToTime(const string strTime, FormatType eType);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatStamp
	* 描述: 格式化SYSTEMTIME结构转换为2014-03-08 12:34:45.367样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:22:49, lys 创建函数
	*
	******************************************************************************/
	static string FormatStamp(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatStandard
	* 描述: 格式化SYSTEMTIME结构为2014-03-08 12:34:45样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:23:56, lys 创建函数
	*
	******************************************************************************/
	static string FormatStandard(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShort
	* 描述: SYSTEMTIME结构转换为20140308123445样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:25:0, lys 创建函数
	*
	******************************************************************************/
	static string FormatShort(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShortDate
	* 描述: SYSTEMTIME结构转换为 20140308样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:28:26, lys 创建函数
	*
	******************************************************************************/
	static string FormatShortDate(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatShortTime
	* 描述: SYSTEMTIME结构转换为 123445样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:15, lys 创建函数
	*
	******************************************************************************/
	static string FormatShortTime(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatLongDate
	* 描述: SYSTEMTIME结构转换为 2014-03-08样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:29:40, lys 创建函数
	*
	******************************************************************************/
	static string FormatLongDate(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.FormatLongTime
	* 描述: SYSTEMTIME结构转换为 12:34:45样式
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:31:16, lys 创建函数
	*
	******************************************************************************/
	static string FormatLongTime(SYSTEMTIME tTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.StampToTime
	* 描述:2014-03-08 12:34:45.367样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:23:25, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StampToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.StandardToTime
	* 描述: 2014-03-08 12:34:45样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:24:38, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME StandardToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortToTime
	* 描述: 20140308123445样式转换为SYSTEMTIME结构
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:27:53, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortDateToTime
	* 描述: 20140308样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:28:49, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortDateToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.ShortTimeToTime
	* 描述: 123445样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:42, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME ShortTimeToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.LongDateToTime
	* 描述: 2014-03-08样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:30:1, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME LongDateToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.LongTimeToTime
	* 描述: 12:34:45样式转换为SYSTEMTIME结构 注: 未指定的时间项将获取当前本地时间补齐
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:35:5, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME LongTimeToTime(const string strTime);

	/******************************************************************************
	* 函数名:JCTimeFormat.GetWeekDay
	* 描述: 计算指定日期为星期几(0 周日 1 周一...)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:20:3, lys 创建函数
	*
	******************************************************************************/
	static int GetWeekDay(int nYear, int nMonth, int nDay);

private:
	static string strFormat[FORMATMAX];
	static const int FMT_MAX_LEN;
};

class DLL_EXPORT JCTime
{
public:
	/******************************************************************************
	* 函数名:JCTime.JCTime
	* 描述: 获取当前本地时间作为对象时间,默认输出格式2014-03-08 12:34:45
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:37:10, lys 创建函数
	*
	******************************************************************************/
	JCTime(JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);
	//JCTime(const SYSTEMTIME tSystemTIme, JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);

	/******************************************************************************
	* 函数名:JCTime.JCTime
	* 描述: 以tLocalTime本地时间参数初始化对象时间,默认输出格式2014-03-08 12:34:45
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:38:18, lys 创建函数
	*
	******************************************************************************/
	JCTime(const SYSTEMTIME tLocalTIme, JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);
	//JCTime(const string strSystemTime, JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);

	/******************************************************************************
	* 函数名:JCTime.JCTime
	* 描述: 以strLocalTime本地时间字串初始化对象时间,默认输出格式2014-03-08 12:34:45
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:39:6, lys 创建函数
	*
	******************************************************************************/
	JCTime(const string strLocalTime, JCTimeFormat::FormatType eType = JCTimeFormat::STANDARD);
	virtual ~JCTime();

	/******************************************************************************
	* 函数名:JCTime.SetTimeFormat
	* 描述: 设置时间对象输出格式,格式类型参考JCTimeFormat::FormatType
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:40:22, lys 创建函数
	*
	******************************************************************************/
	void SetTimeFormat(JCTimeFormat::FormatType eType);

	/******************************************************************************
	* 函数名:JCTime.GetCurrentSystemTime
	* 描述: 获取当前UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:45:15, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME GetCurrentSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetCurrentLocalTime
	* 描述: 获取当前本地时区时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:45:36, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME GetCurrentLocalTime();

	/******************************************************************************
	* 函数名:JCTime.SystemTimeToLocalTime
	* 描述: 将UTC时间转换为本地时区时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:45:56, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME SystemTimeToLocalTime(const SYSTEMTIME tSystemTime);

	/******************************************************************************
	* 函数名:JCTime.LocalTimeToSystemTime
	* 描述: 将本地时区时间转换为UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:10, lys 创建函数
	*
	******************************************************************************/
	static SYSTEMTIME LocalTimeToSystemTime(const SYSTEMTIME tLocalTime);

	/******************************************************************************
	* 函数名:JCTime.GetFmtCurrentSystemTime
	* 描述: 获取格式化的当前UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:28, lys 创建函数
	*
	******************************************************************************/
	string GetFmtCurrentSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetFmtCurrentLocalTime
	* 描述: 获取格式化的当前本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:46:47, lys 创建函数
	*
	******************************************************************************/
	string GetFmtCurrentLocalTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectSystemTime
	* 描述: 获取时间对象初始化时间对应的UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:47:1, lys 创建函数
	*
	******************************************************************************/
	SYSTEMTIME GetObjectSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectLocalTime
	* 描述: 获取时间对象初始化时间对应的本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:47:50, lys 创建函数
	*
	******************************************************************************/
	SYSTEMTIME GetObjectLocalTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectBirthSystemTime
	* 描述: 获取时间对象构造时的UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:48:16, lys 创建函数
	*
	******************************************************************************/
	SYSTEMTIME GetObjectBirthSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectBirthLocalTime
	* 描述: 获取时间对象构造时的本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:48:40, lys 创建函数
	*
	******************************************************************************/
	SYSTEMTIME GetObjectBirthLocalTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectFmtSystemTime
	* 描述: 格式化输出时间对象初始化时间对应的UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:49:37, lys 创建函数
	*
	******************************************************************************/
	string GetObjectFmtSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectFmtLocalTime
	* 描述: 格式化输出时间对象初始化时间对应的本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:50:4, lys 创建函数
	*
	******************************************************************************/
	string GetObjectFmtLocalTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectFmtBirthSystemTime
	* 描述: 格式化输出时间对象构造时的UTC时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:48:59, lys 创建函数
	*
	******************************************************************************/
	string GetObjectFmtBirthSystemTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectFmtBirthLocalTime
	* 描述: 格式化输出时间对象构造时的本地时间
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:49:17, lys 创建函数
	*
	******************************************************************************/
	string GetObjectFmtBirthLocalTime();

	//SYSTEMTIME GetObjectLivingTime();
	//string GetObjectFormattedLivingTime();

	/******************************************************************************
	* 函数名:JCTime.GetObjectLivingTick
	* 描述: 获取时间对象从构造到当前历经的tick数(单位 ms)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:50:30, lys 创建函数
	*
	******************************************************************************/
	unsigned long GetObjectLivingTick();

    /******************************************************************************
    * 函数名:JCTime.GetSystemTickCount
    * 描述: 获取常规系统Tick计数(一个tick为1ms)
    *
    * 输入:
    * 输出:
    * 返回值:
    *
    * 修改记录:
    * --------------------
    *    2014/03/27 10:11:15, lys 创建函数
    *
    ******************************************************************************/
	unsigned long GetSystemTickCount();

	/******************************************************************************
	* 函数名:JCTime.GetObjectLivingHPTick
	* 描述: JCTime.GetObjectLivingTick的高精度版本
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:51:12, lys 创建函数
	*
	******************************************************************************/
	float GetObjectLivingHPTick();

    /******************************************************************************
    * 函数名:JCTime.GetSystemHPTickCount
    * 描述: 获取高精度系统tick计数(一个tick为1ms)
    *
    * 输入:
    * 输出:
    * 返回值:
    *
    * 修改记录:
    * --------------------
    *    2014/03/27 10:10:15, lys 创建函数
    *
    ******************************************************************************/
	float GetSystemHPTickCount();

	/******************************************************************************
	* 函数名:JCTime.TickElapse
	* 描述: 常规时间计数器获取tick时间间隔(单位ms, 精度一般为16ms)
	*
	* 输入:
	* 输出:
	* 返回值: 第一次调用为时间对象构造到该函数调用之间经历的tick数, 此后每一次调用
	*         返回值为与上一次函数调用之间经历的tick数
	* 修改记录:
	* --------------------
	*    2014/03/18 14:40:46, lys 创建函数
	*
	******************************************************************************/
	unsigned long TickElapse();/*大约16ms精度*/

	/******************************************************************************
	* 函数名:JCTime.HPTickElapse
	* 描述: JCTime.TickElapse的高精度版本(单位 ms 精度可达1ms)
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:44:9, lys 创建函数
	*
	******************************************************************************/
	float HPTickElapse();/*可达到1ms精度*/

	/******************************************************************************
	* 函数名:JCTime.IsHPTickSupport
	* 描述: 系统是否支持高精度计时
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:43:58, lys 创建函数
	*
	******************************************************************************/
	bool  IsHPTickSupport();

	friend bool DLL_EXPORT operator==(const JCTime& lhs, const JCTime& rhs);
	friend bool DLL_EXPORT operator!=(const JCTime& lhs, const JCTime& rhs);
	friend bool DLL_EXPORT operator<(const JCTime& lhs, const JCTime& rhs);

protected:
	/******************************************************************************
	* 函数名:JCTime.GetPerformanceFrequency
	* 描述: 获取系统频率
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:43:7, lys 创建函数
	*
	******************************************************************************/
	__int64 GetPerformanceFrequency();

	/******************************************************************************
	* 函数名:JCTime.GetTimeInMilliSeconds
	* 描述: 将高精度tick数按系统频率转换为ms数
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:43:21, lys 创建函数
	*
	******************************************************************************/
	float GetTimeInMilliSeconds(__int64 nTime);

private:
	/******************************************************************************
	* 函数名:JCTime.InitHPTickCounter
	* 描述: 初始化高精度tick计数器
	*
	* 输入:
	* 输出:
	* 返回值:
	*
	* 修改记录:
	* --------------------
	*    2014/03/18 14:40:1, lys 创建函数
	*
	******************************************************************************/
	void InitHPTickCounter();

	unsigned long m_nBirthTick;
	unsigned long m_nLastTick;

	__int64 m_nPerformanceFrequency;
	LARGE_INTEGER m_nHPBirthTick;
	LARGE_INTEGER m_nHPLastTick;

	SYSTEMTIME m_tBirthSystemTime;
	FILETIME m_tObjectFileTime;

	JCTimeFormat::FormatType m_eFormatType;
};
#endif /* end win32*/
#endif /* _JCTIME_H_ */

