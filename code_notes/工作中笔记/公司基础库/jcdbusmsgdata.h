//   NOTE: this is a machine generated file--editing not recommended
//
// jcdbusmsgdata.h - class definitions for ASN.1 module JCDbusMsgData
//
//   This file was generated by snacc on Tue Jan 20 20:56:14 2015
//   UBC snacc by Mike Sample

#ifndef _jcdbusmsgdata_h_
#define _jcdbusmsgdata_h_


#include "asn-incl.h"
#include "asn-listset.h"

#ifndef NO_NAMESPACE
namespace SNACC {
#endif
// RWC; IF static refs to this class set, compiler define JCASN_DLL=
#ifndef JCASN_DLL
#if defined(WIN32)
#pragma warning( disable : 4251)
#ifdef JCASN_DLL_EXPORTS
#define JCASN_DLL __declspec(dllexport)
#else
#define JCASN_DLL __declspec(dllimport)
#endif      // JCASN_DLL
#else       // Handle Unix...
#define JCASN_DLL 
#endif      // WIN32
#endif      // JCASN_DLL
//------------------------------------------------------------------------------
// class declarations:

class JCDbusMsgData;

//------------------------------------------------------------------------------
// externs for value defs

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// class definitions:

class JCASN_DLL JCDbusMsgData: public AsnType
{
public:
  AsnInt       nMsgCode;


  AsnInt       nClientId;


  AsnInt       nSrcDaemonId;


  AsnInt       nSrcModuleId;


  AsnInt       nDestDaemonId;


  AsnInt       nDestModuleId;


  AsnInt       nExecCode;


  AsnAny       pIn;


  AsnAny       pOut;


   JCDbusMsgData() {Init();}
   void Init(void);
   virtual ~JCDbusMsgData() {Clear();}
   void Clear();

	int checkConstraints(ConstraintFailList* pConstraintFails) const;

   JCDbusMsgData(const JCDbusMsgData& that);
public:
	 virtual const char* typeName() const	{ return "JCDbusMsgData"; }
  AsnType		*Clone() const;

  JCDbusMsgData		&operator = (const JCDbusMsgData &that);
  AsnLen		BEncContent (AsnBuf &_b) const;
  void			BDecContent (const AsnBuf &_b, AsnTag tag, AsnLen elmtLen, AsnLen &bytesDecoded);

  AsnLen		BEnc (AsnBuf &_b) const;
  void			BDec (const AsnBuf &_b, AsnLen &bytesDecoded);
	void Print(std::ostream& os, unsigned short indent = 0) const;
  void		PrintXML (std::ostream &os, const char *lpszTitle=NULL) const;
};


#ifndef NO_NAMESPACE
} // namespace close
#endif

#endif /* conditional include of jcdbusmsgdata.h */
