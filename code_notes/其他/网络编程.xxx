阻塞和非阻塞的应用一般用于服务器端，而同步和异步的操作一般用于客户端

在理论层面对socket,TCP/IP,HTTP的理解
1.OSI（Open System Interconnect），即开放式系统互联。一般都叫OSI参考模型，该体系结构标准定义了网络互连的七层框架（物理层、数据链路层、网络层、传输层、会话层、表示层和应用层）
2.IP协议对应于网络层，TCP协议对应于传输层，主要解决数据如何在网络中传输，HTTP协议对应于应用层，主要解决如何包装数据
3.socket是对TCP/IP协议的封装和应用，本身不是协议，而是一个调用接口(API)，socket可以创建TCP或者UDP连接，socket实际上是为了实现通信而建立起来的通信管道，其真实的代表是客户端和服务端的一个通信进程，双方进程通过socket进行通信。
4.TCP连接的三次握手
	第一次：客户端发送SYN包到服务器，进入SYN_SEND状态，等待服务器确认
	第二次：服务器收到SYN包，并发送SYN+ACK包，进入SYN_RECV状态
	第三次：客户端收到SYN+ACK包，向服务器发送确认包ACK，之后，完成三次握手
5.利用socket建立网络连接的步骤
	建立socket连接至少需要一对套接字，客户端ClientSocket和服务器端ServerSocket
	套接字直接的连接分为三个步骤：服务器监听，客户端请求，连接确认
	1.服务器监听：等待连接的状态，实时监控网络状态，等待客户端的连接请求
	2.客户端请求：客户端的套接字提出连接请求(套接字必须描述需要连接的服务器的套接字，指出服务器套接字的地址和端口号)
	3.连接确认：服务器接收到客户端套接字的连接请求时，响应请求，建立一个新的线程，并将服务器端套接字的描述发给客户端，客户端确认此描述，正式建立连接
6.HTTP特点
	1.支持客户/服务器模式
	2.灵活：HTTP允许传输任意类型的数据对象
	3.无连接：限制每次连接只处理一个请求，即服务器处理完客户请求，并收到客户的应答后，立即断开连接。这种方式可以节省传输时间
	4.无状态：对于事务处理没有记忆能力
	5.简单快速：客户向服务器请求服务时，只需传送请求方法和路径
7.HTTP URL 格式  http://host[":"port][abs_path]   host表示合法的Internet主机域名或IP地址，port指定一个端口，abs_path指定请求资源的URI
8.HTTP1.1版本比起HTTP1.0版本最大的区别就是允许多个HTTP请求复用一个TCP连接，以加快传输速度
9.HTTP请求
	步骤1：浏览器向服务器发送HTTP请求，请求包括方法、路径、域名，以及其他相关的Header，如果方法的POST,那么请求还包括一个Body，包含用户数据
	步骤2：服务器向浏览器返回HTTP响应，响应包括响应代码、响应类型，以及其他相关的Header，通常服务器的HTTP响应会携带内容，也就是一个Body，包含响应的内容
	步骤3：如果浏览器还需要继续向服务器请求其他资源，就再次发出HTTP请求，重复步骤1、2
	
	
在代码层面对socket的理解
利用系统调用 socket()，它返回套接字描述符 (socket descriptor)，这是一个无符号整数，然后再通过它来进行send() 和 recv()调用